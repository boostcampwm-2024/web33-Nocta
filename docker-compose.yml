services:
  frontend:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    volumes:
      - ./client/dist:/app/client/dist
    environment:
      - NODE_ENV=${NODE_ENV}
    command: pnpm --filter client run build

  backend:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=${MONGO_URI}
      - NODE_ENV=${NODE_ENV}

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./client/dist:/usr/share/nginx/html
      - ./certbot/conf:/etc/letsencrypt # Certbot 인증서 파일 공유
      - ./certbot/www:/var/www/certbot # Certbot 웹 루트 디렉토리 공유
      - ./nginx/conf.d:/etc/nginx/conf.d # Nginx 설정 공유
    depends_on:
      - frontend
      - backend
      - certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt # 인증서 저장 경로
      - ./certbot/www:/var/www/certbot # 인증 과정에 필요한 웹 루트 경로
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do sleep 1; done'

networks:
  app-network:
    driver: bridge
